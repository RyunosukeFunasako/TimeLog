// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  hashedPassword String
  nickName String?
  projects Project[]
}

model Project {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  description String?
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  workSessions WorkSession[]
}

model WorkSession {
  id Int @id @default(autoincrement())
  startTime DateTime
  endTime DateTime?
  breakStartTime DateTime?
  breakEndTime DateTime?
  duration Int?
  status SessionStatus @default(WORKING)
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId Int
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

enum SessionStatus {
  WORKING
  ON_BREAK
  COMPLETED
}